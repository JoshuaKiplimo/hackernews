{"version":3,"sources":["reducer.js","actions.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["reducer","state","action","type","loading","console","log","payload","nbPages","news","searchValue","page","filter","story","objectID","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","fetchData","url","a","fetch","response","json","hits","useEffect","Provider","value","handleSearch","removeStory","storyID","handlePage","newPage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Stories","map","title","points","author","num_comments","key","href","rel","onClick","Buttons","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.602c5af8.chunk.js","sourcesContent":["import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from \"./actions\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, loading: !state.loading };\n    case SET_STORIES:\n      console.log(action.payload.nbPages);\n      return {\n        ...state,\n        news: action.payload.news,\n        nbPages: action.payload.nbPages,\n      };\n    case HANDLE_SEARCH:\n      return { ...state, searchValue: action.payload };\n    case REMOVE_STORY:\n      console.log(action.payload);\n      return {\n        ...state,\n        page: action.payload,\n      };\n    case HANDLE_PAGE:\n      console.log(action.payload);\n      return {\n        ...state,\n        news: state.news.filter((story) => story.objectID !== action.payload),\n      };\n  }\n};\nexport default reducer;\n","export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n","import React, { useContext, useEffect, useReducer } from \"react\";\n\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from \"./actions\";\nimport reducer from \"./reducer\";\n\nconst API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?\";\n\nconst initialState = {\n  loading: false,\n  news: [],\n  searchValue: \"react\",\n  page: 0,\n  nbPages: 0,\n};\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchData = async (url) => {\n    try {\n      dispatch({ type: SET_LOADING });\n      const response = await fetch(url);\n      const news = await response.json();\n      console.log(news);\n      dispatch({\n        type: SET_STORIES,\n        payload: { news: news.hits, nbPages: news.nbPages },\n      });\n      dispatch({ type: SET_LOADING });\n    } catch (error) {\n      dispatch({ type: SET_LOADING });\n      console.log(error);\n    }\n  };\n  const handleSearch = (value) => {\n    dispatch({ type: HANDLE_SEARCH, payload: value });\n  };\n  const removeStory = (storyID) => {\n    dispatch({ type: REMOVE_STORY, payload: storyID });\n  };\n  const handlePage = (action, page) => {\n    let newPage = state.page;\n    if (action === \"prev\") {\n      state.page <= 0 ? (newPage = 50) : (newPage = newPage - 1);\n    } else {\n      state.page >= 50 ? (newPage = 0) : (newPage = newPage + 1);\n    }\n    dispatch({ type: REMOVE_STORY, payload: newPage });\n  };\n  useEffect(() => {\n    fetchData(`${API_ENDPOINT}query=${state.searchValue}&page=${state.page}`);\n  }, [state.searchValue, state.page]);\n  return (\n    <AppContext.Provider\n      value={{\n        ...state,\n        handleSearch,\n        removeStory,\n        handlePage,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SearchForm = () => {\n  const { searchValue, handleSearch } = useGlobalContext();\n  return (\n    <>\n      <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\n        <h2>Search Hacker News</h2>\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={searchValue}\n          onChange={(e) => handleSearch(e.target.value)}\n        ></input>\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\n\nimport { useGlobalContext } from \"./context\";\n\nconst Stories = () => {\n  const { news, loading, removeStory } = useGlobalContext();\n  if (loading) {\n    return <div className=\"loading\"></div>;\n  }\n\n  return (\n    <>\n      <section className=\"stories\">\n        {news.map((story) => {\n          const { title, url, points, author, num_comments, objectID } = story;\n          return (\n            <article className=\"story\" key={objectID}>\n              <h4 className=\"title\">{title}</h4>\n              <p className=\"info\">\n                {`${points} points by`}\n                <span>{author} | </span>\n                {`${num_comments} comments`}\n              </p>\n              <div>\n                <a\n                  href={url}\n                  className=\"read-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  read more\n                </a>\n                <button\n                  className=\"remove-btn\"\n                  onClick={() => removeStory(objectID)}\n                >\n                  remove\n                </button>\n              </div>\n            </article>\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\nexport default Stories;\n","import React from \"react\";\nimport { HANDLE_PAGE } from \"./actions\";\nimport { useGlobalContext } from \"./context\";\n\nconst Buttons = () => {\n  const { page, loading, handlePage, nbPages } = useGlobalContext();\n\n  return (\n    <>\n      <div className=\"btn-container\">\n        <button disabled={loading} onClick={() => handlePage(\"prev\", page - 1)}>\n          prev\n        </button>\n        <p>{`${page + 1} of ${nbPages}`}</p>\n        <button disabled={loading} onClick={() => handlePage(\"next\", page + 1)}>\n          next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport Stories from \"./Stories\";\nimport Buttons from \"./Buttons\";\nfunction App() {\n  return (\n    <>\n      <SearchForm />\n      <Buttons />\n      <Stories />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}